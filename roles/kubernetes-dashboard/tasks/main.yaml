---

########################################
# Install Kubernetes Dashboard & Ingress
########################################

- name: Install Kubernetes Dashboard
  shell: >
    kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/aio/deploy/recommended.yaml
  ignore_errors: true
  args:
    executable: /bin/bash

- name: Add a Dashboard Admin user account
  shell: >
    echo "{{ lookup( 'template', '{{ item }}.yaml.j2') }}" | kubectl create -f -
  vars:
    k8s_namespace: kubernetes-dashboard
  args:
    executable: /bin/bash
  ignore_errors: true
  with_items:
    - ServiceAccount
    - ClusterRoleBinding

- import_role:
    name: helm-nginx-ingress
  vars:
    k8s_namespace: kubernetes-dashboard
    backend_protocol: https

- name: "Checking SSL for *.{{ dns_zone }}"
  aws_acm_info:
    domain_name: "*.{{ dns_zone }}"
    region: "{{ aws_region }}"
    statuses: ISSUED
  register: acm

- name: Extract Certificate ARN
  set_fact:
    certificate_arn: "{{ acm.certificates[0].certificate_arn }}"

- debug:
    var: certificate_arn

- fail:
  when: not certificate_arn | length >= 0

- name: create temporary file
  tempfile:
    state: file
    suffix: temp
  register: temp_file

- name: Dump the current kubernetes-dashboard service configuration.
  shell: >
    kubectl get service -n kubernetes-dashboard kubernetes-dashboard -o yaml > {{ temp_file.path }} 
  args:
    executable: /bin/bash

- lineinfile:
    path: "{{ temp_file.path }}"
    insertafter: '^  annotations:$'
    line: "    {{ item.name }}: '{{ item.value }}'"
  with_items:
#    - { name: "service.beta.kubernetes.io/aws-load-balancer-proxy-protocol", value: "*" }
#    - { name: "service.beta.kubernetes.io/aws-load-balancer-type", value: "{{ elb_type }}" }
#    - { name: "service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled", value: "true" }
#    - { name: "service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout", value: "3600" }
    - { name: "service.beta.kubernetes.io/aws-load-balancer-backend-protocol", value: "https" }
    - { name: "service.beta.kubernetes.io/aws-load-balancer-ssl-ports", value: "https" }
    - { name: "service.beta.kubernetes.io/aws-load-balancer-ssl-cert", value: "{{ certificate_arn }}" }

- shell: >
    kubectl apply -f {{ temp_file.path }} 
  args:
    executable: /bin/bash

- name: use the registered var and the file module to remove the temporary file
  file:
    path: "{{ temp_file.path }}"
    state: absent
  when: temp_file.path is defined

- name: "Setup Kubernetes Dashboard Ingress at kubernetes-dashboard.{{ dns_zone }}"
  shell: |
    cat <<EOF | kubectl create -f -
    {{ lookup( 'template', 'dashboard-ingress.yaml.j2') }}
    EOF
  vars:
    k8s_namespace: kubernetes-dashboard
  args:
    executable: /bin/bash
